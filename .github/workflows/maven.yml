# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: Java CI with Maven

on:
  push:
    branches:
      - main  # Trigger when pushing to the main branch
  pull_request:
    branches:
      - main  # Trigger when making a pull request to the main branch

jobs:
  build:
    runs-on: ubuntu-latest  # Use the latest Ubuntu runner

    steps:
      - name: Checkout code
        uses: actions/checkout@v2  # Checkout the code from your repository

      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          java-version: '11'  # Set the Java version (you can change this to match your project)
          distribution: 'adoptopenjdk'  # Use the AdoptOpenJDK distribution

      - name: Cache Maven dependencies
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository  # Cache the local Maven repository to speed up builds
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Build with Maven
        run: mvn clean install  # Compile the project and install dependencies

      - name: Run tests
        run: mvn test  # Run unit tests

      - name: Upload test results
        uses: actions/upload-artifact@v2
        with:
          name: test-results
          path: target/surefire-reports  # Upload the test results for inspection

      - name: Deploy to production (Optional)
        if: success()  # Deploy if the build and tests are successful
        run: echo "Deploying the project..."  # Replace with your deployment command
